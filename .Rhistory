par(mfrow=c(1,5))
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
par(mfrow=c(1,2))
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
par(mfrow=c(4,1)
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[4, ], pch=19, ylab = "cluster center", xlab="variable")
par(mfrow=c(1,4)
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[4, ], pch=19, ylab = "cluster center", xlab="variable")
?mfrow
??mfrow
par(mfrow=c(1,4)
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[4, ], pch=19, ylab = "cluster center", xlab="variable")
par(mfrow=c(1,3)
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
par(mfrow=c(1,3))
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
qplot(Petal.Length, Sepal.Length, data=iris, col=iris$Species)
#also by plotting each cluster's centre for all the variables
par(mfrow=c(1,3))
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
#also by plotting each cluster's centre for all the variables
par(mfrow=c(1,3))
plot(kmeansObj$center[1, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[2, ], pch=19, ylab = "cluster center", xlab="variable")
plot(kmeansObj$center[3, ], pch=19, ylab = "cluster center", xlab="variable")
?pairs
setwd("~/Andy files/Data Science - Coursera/5 Reproducible Research/RepData_PeerAssessment1")
read.csv(activity.zip)
read.csv("activity.zip")
read.csv(unzip("activity.zip"))
activity <- read.csv(unzip("activity.zip"))
View(activity)
summary(activity)
str(summary)
str(summary$date)
str(activity)
View(activity)
View(activity)
summary(activity)
?strptime
?ddply
??ddply
?count
??count
summary(by_date)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=mean(interval)
)
summary(by_date)
activity <- read.csv(unzip("activity.zip"))
```
Convert the date field to proper date.
```{r adddate}
activity$date2 <- strptime(activity$date,"%Y-%m-%d")
activity$date2 <- strptime(activity$date,"%Y-%m-%d")
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=mean(interval)
)
summary(by_date)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=count(interval)
)
summary(by_date)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=n())
)
summary(by_date)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=n()
)
summary(by_date)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=n(interval)
)
summary(by_date)
?n
?count
?
n_distinct
?n_distinct
??n_distinct
??n
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=count(interval)
)
summary(by_date)
str(activity)
summary(activity)
View(activity)
unique(interval)
unique(activity$interval)
length(unique(activity$interval))
?plyr
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=length(unique(interval)
)
summary(by_date)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps), interval_count=length(unique(interval))
)
summary(by_date)
summary(activity)
library(plyr)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps, na.rm=TRUE), interval_count=length(unique(interval))
)
summary(by_date)
hist(by_date$steps_sum, col="red", break=10)
hist(by_date$steps_sum, col="red", breaks=10)
hist(by_date$steps_sum, col="red", breaks=20)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=length(interval>0),
bad_intervals=length(is.na(inverval))
)
missing_obs
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=length(activity$interval>0),
bad_intervals=length(is.na(activity$inverval))
)
missing_obs
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=length(is.na(activity$steps)),
bad_intervals=length(is.na(activity$steps))
)
missing_obs
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=length(is.na(steps)),
bad_intervals=length(is.na(activity$steps))
)
missing_obs
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=length(is.na(activity$steps))
)
missing_obs
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=sum(!is.na(steps))
)
missing_obs
?barplot
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=sum(!is.na(steps))
)
barplot(missing_obs)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=sum(!is.na(steps))
)
barplot(missing_obs[2:3])
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=sum(!is.na(steps))
)
barplot(as.matrix(missing_obs[2:3])
)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=sum(!is.na(steps))
)
barplot(as.matrix(missing_obs[2:3], beside=false)
)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(is.na(steps)),
bad_intervals=sum(!is.na(steps))
)
barplot(as.matrix(missing_obs[2:3], beside=false))
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(!is.na(steps)),
bad_intervals=sum(is.na(steps))
)
barplot(as.matrix(missing_obs[2:3], names.arg=date2, beside=false))
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(!is.na(steps)),
bad_intervals=sum(is.na(steps))
)
#barplot(as.matrix(missing_obs[2:3], names.arg=date2, beside=false))
barplot(missing_obs$good_intervals, names.arg=date2)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(!is.na(steps)),
bad_intervals=sum(is.na(steps))
)
#barplot(as.matrix(missing_obs[2:3], names.arg=date2, beside=false))
barplot(missing_obs$good_intervals, names.arg=missing_obs$date2)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(!is.na(steps)),
bad_intervals=sum(is.na(steps))
)
#barplot(as.matrix(missing_obs[2:3], names.arg=date2, beside=false))
barplot(as.vector(missing_obs$good_intervals), names.arg=missing_obs$date2)
library(plyr)
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(!is.na(steps)),
bad_intervals=sum(is.na(steps))
)
#barplot(as.matrix(missing_obs[2:3], names.arg=date2, beside=false))
v <- missing_obs$good_intervals
barplot(v, names.arg=missing_obs$date2)
v <- missing_obs$good_intervals
v <- missing_obs$date2
missing_obs <- ddply(activity, .(date2), summarize,
good_invervals=sum(!is.na(steps)),
bad_intervals=sum(is.na(steps))
)
v <- missing_obs$date2
v <- missing_obs$good_intervals
v <- missing_obs[,2]
barplot(v, names.arg=missing_obs$date2)
barplot(missing_obs$good_invervals,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(missing_obs$good_invervals, missing_obs$bad_invervals,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(missing_obs[,2:3],
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
barplot(as.matrix(missing_obs[,2:3]),
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
beside=FALSE
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
beside=FALSE,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
beside=FALSE,
horiz=FALSE,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
beside=FALSE,
horiz=FALSE,
axisnames=TRUE,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[2:3,]),
beside=FALSE,
horiz=FALSE,
axisnames=TRUE,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
beside=TRUE,
horiz=FALSE,
axisnames=TRUE,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
col="red")
barplot(as.matrix(missing_obs[,2:3]),
beside=TRUE,
horiz=FALSE,
axisnames=TRUE,
names.arg=missing_obs$date2,
ylab="Emissions Tons 000s",
xlab="Year",
main="Total Emissions by Year",
)
library(ggplot2)
qplot(factor(date2),
good_intervals,
geom="bar",
stat="identity", #stat=identify means plot the value not the count (default is bin)
data=missing_obs)
qplot(factor(date2),
good_intervals,
geom="bar",
stat="identity", #stat=identify means plot the value not the count (default is bin)
data=missing_obs)
missing_obs <- ddply(activity, .(date2), summarize,
good=sum(!is.na(steps)),
bad=sum(is.na(steps))
)
qplot(factor(date2),
good_intervals,
geom="bar",
stat="identity", #stat=identify means plot the value not the count (default is bin)
data=missing_obs)
qplot(factor(date2),
good,
geom="bar",
stat="identity", #stat=identify means plot the value not the count (default is bin)
data=missing_obs)
qplot(date2,
good,
geom="bar",
stat="identity", #stat=identify means plot the value not the count (default is bin)
data=missing_obs)
qplot(date2,
bad,
geom="bar",
stat="identity", #stat=identify means plot the value not the count (default is bin)
data=missing_obs)
?qplot
missing_obs[,bad>0]
missing_obs[,missing_obs$bad>0]
missing_obs[missing_obs$bad>0]
subset(missing_obs, missing_obs$bad>0)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps, na.rm=TRUE), interval_count=length(unique(interval))
)
summary(by_date)
hist(by_date$steps_sum, col="red", breaks=20)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps, na.rm=FALSE),
interval_count=length(unique(interval))
)
hist(by_date$steps_sum, col="red", breaks=20)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps, na.rm=TRUE),
interval_count=length(unique(interval))
)
hist(by_date$steps_sum, col="red", breaks=20)
?subset
hist(subset(by_date$steps_sum, by_date$bad_intervals==0), col="red", breaks=20)
hist(subset(by_date$steps_sum, by_date$bad_intervals=0), col="red", breaks=20)
by_date <- ddply(activity, .(date2), summarize,
steps_sum=sum(steps, na.rm=TRUE),
bad_intervals=sum(is.na(steps)),
good_intervals=sum(!is.na(steps))
)
subset(by_date, by_date$bad_intervals>0)
hist(subset(by_date$steps_sum, by_date$bad_intervals==0), col="red", breaks=20)
good_dates <- subset(by_date, by_date$bad_intervals==0)
hist(good_dates$steps_sum, col="red", breaks=20,
abline(v = median(good_dates$steps_sum), col="blue", lwd=4))
with(good_dates, {
hist(good_dates$steps_sum, col="red", breaks=20)
abline(v = median(good_dates$steps_sum), col="blue", lwd=4)
})
with(good_dates, {
hist(good_dates$steps_sum, col="red", breaks=20)
abline(v = median(good_dates$steps_sum), col="blue", lwd=4)
abline(v = meam(good_dates$steps_sum), col="blue", lwd=4)
})
with(good_dates, {
hist(good_dates$steps_sum, col="red", breaks=20)
abline(v = median(good_dates$steps_sum), col="blue", lwd=4)
abline(v = mean(good_dates$steps_sum), col="blue", lwd=4)
})
with(good_dates, {
hist(steps_sum, breaks=20)
abline(v = median(steps_sum), col="blue", lwd=4)
abline(v = mean(steps_sum), col="red", lwd=4)
})
with(good_dates, {
hist(steps_sum, breaks=50)
abline(v = median(steps_sum), col="blue", lwd=4)
abline(v = mean(steps_sum), col="red", lwd=4)
})
with(good_dates, {
hist(steps_sum, breaks=50)
abline(v = median(steps_sum), col="blue", lwd=1)
abline(v = mean(steps_sum), col="red", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
abline(v = median(steps_sum), col="blue", lwd=1)
abline(v = mean(steps_sum), col="red", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
abline(v = median(steps_sum), col="blue", lwd=1)
#abline(v = mean(steps_sum), col="red", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20, ylab="Number of Dates", xlab="Total Steps")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20,
ylab="Number of Dates", xlab="Total Steps",
main="Total Steps taken each day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
ylab("Number of Dates")
xlab("Total Steps")
main("Histogram of Total steps taken per day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
ylab("Number of Dates")
xlab("Total Steps")
#main("Histogram of Total steps taken per day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
title(ylab="Number of Dates",
xlab="Total Steps",
main="Histogram of Total steps taken per day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
title(ylab="Number of Dates", pch=1,
xlab="Total Steps",
main="Histogram of Total steps taken per day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20)
title(ylab="Number of Dates", pch=100,
xlab="Total Steps",
main="Histogram of Total steps taken per day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20,
ylab="Number of Dates",
xlab="Total Steps",
main="Histogram of Total steps taken per day")
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20,
ylab="Number of Dates",
xlab="Total Steps",
main="Histogram of Total steps taken per day", pch=5)
abline(v = median(steps_sum), col="blue", lwd=1)
})
with(good_dates, {
hist(steps_sum, col="grey", breaks=20,
ylab="Number of Dates",
xlab="Total Steps",
main=("Histogram of Total steps taken per day", pch=5))
abline(v = median(steps_sum), col="blue", lwd=1)
})
?hist
mn <- round(mean(good_dates$steps_sum),0)
mn
?round
